//////
go to blu-ice and web-ice wiki for the Authentication setup

//////
cbflib compiling

1) go to CBFlib-0.8.1 dir
2) copy Makefile Makefile_LINUX_64 Makefile
3) make clean
4) make install
5) go back to cbflib and then go to lib
6) mkdir linux64
7) cd linux64
8) cp CBFlib-0.8.1/lib/*.a .

///////
tcl_lib

add #include <stdio.h> in the following file if errors ocurred in compiling
src/linearRegression.cpp:19

change <iostream.h> to <iostream> in file src/image_channel.c

add #include <cstdlib>   in file src/decimalnum.h and src/findMax.cpp

change #include <string> to <cstring> in file src/fitFunction.cpp

add #include <stdio.h> in file src/decimalnum.cpp

change CONST to const in the file src/imagePGM16.cc

change the following
char*fileName to const char *fileName in function PGM16Format_fileMatch()
and function PGM16Format_fileRead()

///////
dcsmsg

change #include <string> to <cstring> in file src/testTclList.cxx

//////
dcss

line 215, 232 change "const char * " to "char *" src/dcss_broadcast.c

line 602, 2400,2401,2712,2365 change "const char * " to "char *" in file src/dcss_gui_client.c

change "STD_LIBS += -ltk -ltcl -litcl3.3" to "STD_LIBS += -ltk -ltcl -litcl3.4"
in the makefile under dcss dir

add include<stddef.h> and <stdio.h> in the dcss_database.c file. Otherwise
it will have error on the function "offsetof".

**** add -lcrypto in the makefile of auth_client in order to compile the
program.
also in imperson_cpp and dcss

Otherwise it will give the following error somehow
/usr/bin/ld: ../http_cpp/linux64/libhttp-cpp.a(SSLCommon.o): undefined
reference to symbol 'EVP_PKEY_CTX_free@@libcrypto.so.10'
/usr/bin/ld: note: 'EVP_PKEY_CTX_free@@libcrypto.so.10' is defined in DSO
/lib64/libcrypto.so.10 so try adding it to the linker command line
/lib64/libcrypto.so.10: could not read symbols: Invalid operation
collect2: error: ld returned 1 exit status


***********5/4/2016******* I just tared Img1.2.4 directory from /usr/lib and copied it
to the same dire and /usr/lib64. Then everything works. I have hard time
to compiling it anyway.

img1.2.4 compiling

(1) put #define USE_COMPOSITELESS_PHOTO_PUT_BLOCK at begining of

imgUtil.c
imgUtil.h
imgUtil.c
imgUtil.c
imgBMP.c
imgGIF.c
imgJPEG.c
imgPNG.c
imgPS.c
imgWindow.c
imgXBM.c
imgXPM.c

or I could do the following (get from the web)

the Tk folks have changed the Tk_PhotoPutBlock interface in 8.4.x.
to fix this, you have to add a TK_PHOTO_COMPOSITE_OVERLAY parameter
to all three Tk_PhotoPutBlock calls in tkImaging.c.


to make it work under older versions as well, change all
    Tk_PhotoPutBlock(...);
calls to

    Tk_PhotoPutBlock(...
#if (TK_MAJOR_VERSION == 8 && TK_MINOR_VERSION >= 4 || TK_MAJOR_VERSION > 8)
        , TK_PHOTO_COMPOSITE_OVERLAY
#endif
    );

(untested)

(2) download "tcllib-1.11.1-4.fc15.noarch.rpm" and install it.
It include MIME 1.5.4 libarary package

alternatively (but also untested), you can add a
#define USE_COMPOSITELESS_PHOTO_PUT_BLOCK
to the top of the file (before including the Tcl and Tk libraries)

(3) compiling release-5_1/dhs in files src/safeFile.cc
change nextSlash = strstr( searchDirectory,"/");
to  nextSlash = strstr( (char *)searchDirectory,"/");

or redefine searchDirectory to char * not const char *

(4) setenv EPICS_HOST_ARCH linux-x86_64

(5) In impdhs change file src/AutochoochThread.cxx

char* str =  strchr(m_pMsg->GetOperationArgument(), '{');
to
char* str = (char*) strchr(m_pMsg->GetOperationArgument(), '{');
 src/AutochoochThread.cxx

src/FileAccessThread.cxx:508
from char* str = strrchr( pArgs, '{');
to   char* str = (char*) strrchr( pArgs, '{');

(7) when install ifort (intel fortran compiler), it will
tells you that there's missing glib ... for 32 bits and
your system is not supported. Just ignore all of it and
go ahead to install the package.

(8)  /etc/xinetd.d/imperson is set as following (it should change to /usr/local/dcs
when dcs is installed in the root)

 service imperson
{
        type            =UNLISTED
        socket_type     =stream
        protocol        =tcp
        wait            =no
        user            =root
        server          =/usr/local/sbin/imperson.d
        server_args     =host=localhost port=8080 securePort=8443 appName=SMBTest caFile=/home/yangx/release-5_1/dcsconfig/data/X4A.crt
        port            =61001
        disable         =no
}

make sure xinetd is running
do
	ps -ef|grep xinetd
to check it. if it's not runing then the imerson will not run. So you need
to run the xinetd. then use the ./test.csh in the ../imperson_cpp to see
things ok. If the test.csh still can not be past. do the following
0) ps -e|grep xinetd. if it's not started, start it. 
1) shuttomcat
2) starttomcat
3) then start ./test.csh

(8) Download the new tcl_clibs from repository and recompile it. The old one from dkong yangx
doesn't work with 64 bits somehow. It gives the following messages in the dcss log file

changed followint in the makefile
from 
TCL_LIB = /usr/local/lib/libtcl8.3$(SHAREDEXT) /usr/local/lib/libtk8.3$(SHAREDEXT)
TCL_LIB = -ltcl8.4 -ltk8.4
to
TCL_LIB = /usr/lib64/libtcl8.5$(SHAREDEXT) /usr/lib64/libtk8.5$(SHAREDEXT)
TCL_LIB = -ltcl8.5 -ltk8.5

(9) ******* It's important. I installed tkimg1.4. It always have segment fault error when 
run ./bluice.tcl X4A. I checked the process. The eror occurs when it runs the
line code "$m_rawImage configure -data $_imageData" at Video.tcl. The video
image on the cameras could never displayed in the bluice gui. I could not
figoured out what's going on. Finally I removed tkimg1.4. Then everything
works. I checked Img lib. there's /usr/lib/Img1.2 still in there. (the one I
removed was in /usr/lib64/tcl8.5/Img1.4). 

The conclusion is the Img used in the bluice is not tkimg. 

(10) for tls1.6, use tls-1.6-4-x86_64.pkg.tar.xz to extract all the file and
then move to /usr/lib

(11) extract jdk-7-linux-x64.tar.gz in the /usr/local/dcs

(12)For compiling MyAuthServer file. the "makefile" dose not have compiling
x86_64
option. So manually edit the makefile and add the the 64bit compiling option.

ifeq ($(MACHINE),linux64)

########################################################
# linux64
########################################################

ifeq ($(PURIFY),TRUE)
CC      = g++
CXX     = g++
LINK    = purify g++
else
CC      = g++
CXX     = g++
LINK    = g++
endif
CFLAGS  += -c -DLINUX -fexceptions -pthread -D_REENTRANT
CPPFLAGS =
LDFLAGS =
STD_LIBS += -lm -lrt -lpthread -lc

# endif linux64
endif

(13)
change makefile in the xpscandhs directory

        a. from ifeq ($(MACHINE),linux)

           to   ifeq ($(MACHINE),linux64)

        b.  from ifeq ($(MACHINE),linux)
            to   ifeq ($(MACHINE),linux64)

        c.  from ifeq ($(OSTYPE),linux) MACHINE = linux
            to   ifeq ($(OSTYPE),linux64) MACHINE = linux64

        change ALL linux to linux64

(14) make "X4A, userLog/X4A /dcss/dbmapfile /dcss/linux64 epicsgw
impdhs/linux64 xpscanndhs/linux64
/dcsconfig/data" to be all read,write. use chmod 777 to change them

(15)  change "dkong" to "yangxc" in all the
/usr/local/dcs/ccd_dist/LOGIN_files/log_x4a_api_418

Also do the "chmod -R 777 ccd_dist" make all the files read/write

*****
(14)
add the following line in file pkgIndex.tcl in../dcs/DcsWidgets

package ifneeded dict 8.5 {package provide dict 8.5}

This will solve the problem of error for not finding the dict gpackage.
dict package is included in the tcl8.5. 

(15) BluIceWidgets/Resolution.tcl
change catch {load /usr/local/dcs/tcl_clibs/linux/tcl_clibs.so dcs_c_library}
to     catch {load /usr/local/dcs/tcl_clibs/linux64/tcl_clibs.so dcs_c_library}

****** for redhat 7+ compliing *****
it might need to add "-lcrypto" option for compiling in the makefile for dcss and
some dhs modules. This is no need for centos 6+ version. 
